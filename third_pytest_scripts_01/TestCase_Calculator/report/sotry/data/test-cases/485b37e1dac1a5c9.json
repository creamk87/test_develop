{
  "uid" : "485b37e1dac1a5c9",
  "name" : "test_integer_add[整数加法_结果4]",
  "fullName" : "TestCal.TestCalculator#test_integer_add",
  "historyId" : "b9f2066a336b780623798e5c35a19331",
  "time" : {
    "start" : 1597492023612,
    "stop" : 1597492023613,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 101 == 100",
  "statusTrace" : "self = <python_scripts.third_pytest_scripts_01.TestCase_Calculator.TestCal.TestCalculator object at 0x7fdf989e2690>, a = 89, b = 11\nexpect = 101\n\n    @allure.story(\"整数加法\")\n    @pytest.mark.parametrize(\n        ['a', 'b', 'expect'],\n        [data for data in get_data('integer_add')],\n        ids=[\n            '整数加法_结果1',\n            '整数加法_结果2',\n            '整数加法_结果3',\n            '整数加法_结果4'\n        ])\n    def test_integer_add(self, a, b, expect):\n        with allure.step(\"得到计算结果\"):\n            print(\"得到计算结果\")\n            result = self.cal.add(a, b)\n        with allure.step(\"断言结果\"):\n            print(\"断言判断\")\n>           assert expect == result\nE           assert 101 == 100\n\nTestCal.py:67: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1597492023557,
      "stop" : 1597492023558,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 101 == 100",
    "statusTrace" : "self = <python_scripts.third_pytest_scripts_01.TestCase_Calculator.TestCal.TestCalculator object at 0x7fdf989e2690>, a = 89, b = 11\nexpect = 101\n\n    @allure.story(\"整数加法\")\n    @pytest.mark.parametrize(\n        ['a', 'b', 'expect'],\n        [data for data in get_data('integer_add')],\n        ids=[\n            '整数加法_结果1',\n            '整数加法_结果2',\n            '整数加法_结果3',\n            '整数加法_结果4'\n        ])\n    def test_integer_add(self, a, b, expect):\n        with allure.step(\"得到计算结果\"):\n            print(\"得到计算结果\")\n            result = self.cal.add(a, b)\n        with allure.step(\"断言结果\"):\n            print(\"断言判断\")\n>           assert expect == result\nE           assert 101 == 100\n\nTestCal.py:67: AssertionError",
    "steps" : [ {
      "name" : "得到计算结果",
      "time" : {
        "start" : 1597492023613,
        "stop" : 1597492023613,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "断言结果",
      "time" : {
        "start" : 1597492023613,
        "stop" : 1597492023613,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 101 == 100\n",
      "statusTrace" : "  File \"/Users/CreamK/StudyFIle/Test_Develop/python_scripts/third_pytest_scripts_01/TestCase_Calculator/TestCal.py\", line 67, in test_integer_add\n    assert expect == result\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "4bfc2cf3911c8559",
      "name" : "stdout",
      "source" : "4bfc2cf3911c8559.txt",
      "type" : "text/plain",
      "size" : 32
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1597492023725,
      "stop" : 1597492023725,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "整数加法"
  }, {
    "name" : "feature",
    "value" : "计算器"
  }, {
    "name" : "suite",
    "value" : "TestCal"
  }, {
    "name" : "subSuite",
    "value" : "TestCalculator"
  }, {
    "name" : "host",
    "value" : "CreamK"
  }, {
    "name" : "thread",
    "value" : "81900-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCal"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "89"
  }, {
    "name" : "b",
    "value" : "11"
  }, {
    "name" : "expect",
    "value" : "101"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "b1cd16eb4b72d6d2",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 101 == 100",
      "time" : {
        "start" : 1597491686409,
        "stop" : 1597491686409,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "485b37e1dac1a5c9.json",
  "parameterValues" : [ "89", "11", "101" ]
}